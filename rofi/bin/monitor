#!/usr/bin/env bash

INTERNAL_MONITOR="eDP-1"

# Identifies any monitor that is NOT the internal one.
EXTERNAL_MONITOR=$(hyprctl monitors all | grep "Monitor" | grep -v "$INTERNAL_MONITOR" | awk '{print $2}')

# Current Theme
theme="$HOME/.config/rofi/themes/monitor.rasi"

# Rofi Options
extend='' # Extend (mimicking the -1920x0 behavior)
mirror=''
internal_only=''
yes=''
no=''

# Rofi CMD
rofi_cmd() {
  rofi -dmenu \
    -p "Monitor Control" \
    -mesg "Select a Display Layout" \
    -theme ${theme}
}

# This script does not require a confirmation dialog,
# so the confirm_cmd and confirm_exit functions are omitted.

# Pass variables to rofi dmenu
run_rofi() {
  echo -e "$extend\n$mirror\n$internal_only" | rofi_cmd
}

# Execute Command
run_cmd() {
  if [[ "$1" == '--extend' ]]; then
    # Sets the internal monitor and tells hyprland to place
    # the 'next' (unnamed) monitor to its left.
    hyprctl --batch "keyword monitor $INTERNAL_MONITOR,1920x1080@144,0x0,1; keyword monitor $EXTERNAL_MONITOR,1920x1080@120,-1920x0,1"
    for ws in {6..8}; do
      hyprctl dispatch moveworkspacetomonitor "$ws" "$EXTERNAL_MONITOR"
    done
    hyprctl dispatch workspace 6

  elif [[ "$1" == '--mirror' ]]; then
    # Even for mirroring, we need to know the external monitor's name.
    if [[ -z "$EXTERNAL_MONITOR" ]]; then
      notify-send "Monitor Error" "No external monitor detected."
      exit 1
    fi
    hyprctl keyword monitor "$EXTERNAL_MONITOR,1920x1080@144,auto,1,mirror,$INTERNAL_MONITOR"

  elif [[ "$1" == '--internal-only' ]]; then
    if [[ -z "$EXTERNAL_MONITOR" ]]; then
      notify-send "Monitor Error" "No external monitor detected."
      exit 1
    fi
    hyprctl keyword monitor "$EXTERNAL_MONITOR,disable"
  fi
}

# Actions
chosen="$(run_rofi)"
case ${chosen} in
"$extend")
  run_cmd --extend
  ;;
"$mirror")
  run_cmd --mirror
  ;;
"$internal_only")
  run_cmd --internal-only
  ;;
esac
